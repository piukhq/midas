stages:
  - tests
  - build
  - deploy

tests:
  stage: tests
  script:
    - pipenv install --dev --system --deploy
    - pytest app/tests/unit --cov=app

complexity:
  stage: tests
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

flake8:
  stage: tests
  script:
    - flake8 *

build-develop:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/midas:latest" .
    - docker push "$CI_REGISTRY/midas:latest"
  only:
    - develop

build-internal-sandbox:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/midas:ubiquity" .
    - docker push "$CI_REGISTRY/midas:ubiquity"
  only:
    - banking-api-merge

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/midas:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY/midas:$CI_COMMIT_TAG"
  only:
    - tags

deploy-dev:
  stage: deploy
  image: binkops.azurecr.io/kubedeployer:latest
  environment: dev
  script:
    - kubectl delete po -n=dev -l=project=midas
    - kubectl delete po -n=dev -l=project=midas-celery
  only:
    - develop

deploy-internal-sandbox:
  stage: deploy
  image: binkops.azurecr.io/kubedeployer:latest
  environment: dev
  script:
    - kubectl delete po -n=ubiquity -l=project=midas
  only:
    - banking-api-merge

deploy-staging:
  stage: deploy
  image: binkops.azurecr.io/kubedeployer:latest
  environment: staging
  script:
    - kubectl set image -n=staging deployment/midas midas=olympus.azurecr.io/midas:$CI_COMMIT_TAG
  only:
    - tags

deploy-prod:
  stage: deploy
  image: binkops.azurecr.io/kubedeployer:latest
  environment: prod
  script:
    - kubectl set image -n=production deployment/midas midas=olympus.azurecr.io/midas:$CI_COMMIT_TAG
  when: manual
  only:
    - tags

