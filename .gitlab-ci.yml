stages:
  - tests
  - build
  - dev
  - staging
  - prod

default:
  image: binkhq/python:3.9

tests:
  stage: tests
  before_script: &setup
    - pip install pipenv
    - pipenv install --dev --system --deploy --ignore-pipfile
    - pip freeze
  script:
    - pytest --verbose --cov app --cov-report term-missing app/tests/unit

complexity:
  stage: tests
  before_script: *setup
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

style:
  stage: tests
  before_script: *setup
  script:
    - flake8

type-check:
  stage: tests
  before_script: *setup
  script:
    - mypy --ignore-missing-imports app

build-develop:
  stage: dev
  image: docker:latest
  environment: dev
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="develop-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/midas:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/midas:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/midas:$CTAG"
  only:
    - develop

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/midas:$CI_COMMIT_TAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/midas:$CI_COMMIT_TAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/midas:$CI_COMMIT_TAG"
  only:
    - tags

tag-staging:
  stage: staging
  image: binkops.azurecr.io/tagbot:latest
  environment: staging
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/midas:$CI_COMMIT_TAG" --tag "staging-$CI_COMMIT_TAG"
  only:
    - tags

tag-prod:
  stage: prod
  image: binkops.azurecr.io/tagbot:latest
  environment: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/midas:$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags
